{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACTC,mBAAS,IADA,mBACtCC,EADsC,KAC1BC,EAD0B,KAgB7C,OACG,sBAAMC,SAVU,SAACC,GACjBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAkBO,OACpCN,EAAc,MAKjB,SACG,uBACGO,KAAK,OACLC,MAAOT,EACPU,SAlBe,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,QAkBjBG,YAAY,sB,+BCvBXC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEdC,EAFc,iDAEgCC,UAAUH,GAF1C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAMD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACJC,GAAKD,EAAIC,GACTC,MAAQF,EAAIE,MACZV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAVrB,kBAgBbM,GAhBa,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEnC,OACG,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCHDO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAZ,SAAEA,GAAe,IAAD,EACdf,mBAAS,CAChCsB,KAAO,GACPa,SAAU,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAU,WACPxB,EAASC,GACLwB,MAAM,SAAAC,GAEJH,EAAS,CACNf,KAAOkB,EACPL,SAAS,SAIlB,CAAEpB,IAGEqB,EDjB4BK,CAAc1B,GAAlCa,EAFqB,EAE5BN,KAAea,EAFa,EAEbA,QAEvB,OACG,qCACG,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEjDoB,GAAW,mBAAGJ,UAAU,oCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGMH,EAAOJ,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEahBgB,EA5BM,WAAO,IAAD,EAEY1C,mBAAS,CAAC,cAFtB,mBAEjB2C,EAFiB,KAEL5C,EAFK,KAQxB,OACG,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEM4C,EAAWnB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEGA,SAAWA,GADNA,Y,MChB1B6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4ea48271.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n   const handleInputChange=(e)=>{\r\n      setInputValue(e.target.value);\r\n   }\r\n\r\n   const handleSubmit=(e)=>{\r\n      e.preventDefault();\r\n\r\n      if(inputValue.trim().length>2){\r\n         setCategories(cats=>[inputValue, ...cats]);\r\n         setInputValue('');\r\n      }\r\n   }\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <input\r\n            type='text'\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            placeholder='ingrese nombre'\r\n         />\r\n      </form>\r\n   )\r\n}\r\n\r\nAddCategory.propTypes={\r\n   setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n   const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=o6ct08vPpofJQKT7ePrX6HWtZ936iPJl`;\r\n   const resp = await fetch( url );\r\n   const { data } = await resp.json();\r\n\r\n   const gifs= data.map(img => {\r\n      return {\r\n         id : img.id,\r\n         title : img.title,\r\n         url : img.images?.downsized_medium.url\r\n\r\n      }\r\n   })\r\n\r\n   \r\n   return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n\r\n   return (\r\n      <div className=\"animate__animated animate__fadeIn card\">\r\n         <img src={url} alt={title}/>\r\n         <p>{ title }</p>\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n   const { data : images, loading } = useFetchGifs( category );\r\n\r\n   return (\r\n      <>\r\n         <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n         { loading && <p className=\"animate__animated animate__fadeIn\">Loading</p>}\r\n         \r\n         <div className=\"card-grid\">\r\n            \r\n            { \r\n               images.map(img => (               \r\n                  <GifGridItem \r\n                     key={ img.id } \r\n                     { ...img }\r\n                  />\r\n               ))\r\n            }\r\n\r\n         </div>      \r\n      </>\r\n   )\r\n}\r\n","import { useEffect, useState } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs= ( category ) => {\r\n   const [state, setState] = useState({\r\n      data : [],\r\n      loading : true\r\n   });\r\n\r\n   useEffect(() => {      \r\n      getGifs( category )\r\n         .then( imgs => {\r\n            \r\n            setState({\r\n               data : imgs,\r\n               loading: false\r\n            });\r\n            \r\n         });   \r\n   }, [ category ]);\r\n\r\n   \r\n   return state;\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n   const [categories, setCategories] = useState(['One Punch']);\r\n\r\n   // const handlerAdd=()=>{\r\n   //    setCategories([...categories,'Kenichi']);\r\n   // }\r\n\r\n   return (\r\n      <>         \r\n         <h2>GifExpertApp</h2>\r\n         <AddCategory setCategories={setCategories}/>\r\n         <hr/>\r\n\r\n         <ol>\r\n            { \r\n               categories.map(category => (\r\n                  <GifGrid \r\n                     key={category}\r\n                     category={ category } \r\n                  />\r\n               ))\r\n            }\r\n         </ol>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp/>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}